version: "3.9"

services:
  # =============================
  # üß† BACKEND FASTAPI + IA (OpenAI)
  # =============================
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reservas-backend
    env_file:
      - .env  # Carga todas las variables desde el archivo .env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      # üîê IA de pago (OpenAI)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
      # üåê CORS permitido para el frontend
      - CORS_ORIGINS=${CORS_ORIGINS}
      # üóÑÔ∏è Conexi√≥n a la base de datos
      - DATABASE_URL=${DATABASE_URL}
      # ‚öôÔ∏è Redis
      - REDIS_URL=${REDIS_URL}
      # üîê JWT
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
    restart: always
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port 8000
      --reload

  # =============================
  # üóÑÔ∏è BASE DE DATOS POSTGRES
  # =============================
  db:
    image: postgres:15-alpine
    container_name: reservas-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: reservas
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  # =============================
  # ‚ö° REDIS (CACHE / COLAS)
  # =============================
  redis:
    image: redis:alpine
    container_name: reservas-redis
    ports:
      - "6379:6379"
    restart: always

  # =============================
  # üíª FRONTEND REACT (VITE)
  # =============================
  frontend:
    build:
      context: ./app/schemas/frontend
      dockerfile: Dockerfile
    container_name: reservas-frontend
    ports:
      - "5173:5173"
    volumes:
      - ./app/schemas/frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true   # üëà Evita errores de hot-reload en Windows
      - WDS_SOCKET_PORT=5173
      - VITE_API_URL=${VITE_API_URL}  # üëà Conecta el frontend al backend
    depends_on:
      - backend
    restart: always

# =============================
# üì¶ VOLUMENES PERSISTENTES
# =============================
volumes:
  postgres_data:
